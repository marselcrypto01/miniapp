'use client';

import React from 'react';
import { useRouter } from 'next/navigation';
import { initSupabaseFromTelegram } from '@/lib/db';

const WRAP = 'mx-auto max-w-[var(--content-max)] px-4';
const CORE_LESSONS_COUNT = 5;
const REQUIRED_POINTS = 500;

/* === user-scoped localStorage namespace ‚Äî –∫–∞–∫ –Ω–∞ —É—Ä–æ–∫–∞—Ö === */
function getTgIdSync(): string | null {
  try {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const wa = (window as any)?.Telegram?.WebApp;
    const id = wa?.initDataUnsafe?.user?.id;
    return (id ?? null)?.toString?.() ?? null;
  } catch {
    return null;
  }
}
function ns(key: string): string {
  const id = getTgIdSync();
  return id ? `${key}:tg_${id}` : `${key}:anon`;
}

type Progress = { lesson_id: number; status: 'completed' | 'pending' };

/** –°–∫–æ–ª—å–∫–æ —É—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ (–∫–∞–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É—Ä–æ–∫–æ–≤) */
function getLocalCompletedCount(): number {
  try {
    const raw = localStorage.getItem(ns('progress'));
    const arr: Progress[] = raw ? JSON.parse(raw) : [];
    return (Array.isArray(arr) ? arr : []).filter(
      (p) => p.status === 'completed' && p.lesson_id <= CORE_LESSONS_COUNT
    ).length;
  } catch {
    return 0;
  }
}

/** –û—á–∫–∏ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞ (–¥–æ–ª–∂–Ω—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π) */
function getLocalPoints(): number {
  try {
    const raw = localStorage.getItem(ns('points'));
    const n = Number(raw);
    return Number.isFinite(n) ? n : 0;
  } catch {
    return 0;
  }
}

export default function BonusPage() {
  const router = useRouter();

  const [authReady, setAuthReady] = React.useState(false);
  const [allowed, setAllowed] = React.useState<boolean | null>(null);
  const [stateView, setStateView] = React.useState<{completed:number; points:number}>({completed:0, points:0});

  // Telegram/Supabase init (–∫–∞–∫ –Ω–∞ —É—Ä–æ–∫–∞—Ö)
  React.useEffect(() => {
    let off = false;
    (async () => {
      try {
        await initSupabaseFromTelegram();
      } catch {
        // —Ç–∏—Ö–æ ‚Äî –æ—Ñ–ª–∞–π–Ω –æ–∫
      } finally {
        if (!off) setAuthReady(true);
      }
    })();
    return () => { off = true; };
  }, []);

  // –†–µ—à–∞–µ–º, –ø—É—Å–∫–∞—Ç—å –ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É:
  // —É—Å–ª–æ–≤–∏–µ –¥–æ—Å—Ç—É–ø–∞: (–≤—Å–µ 5 —É—Ä–æ–∫–æ–≤ –ø—Ä–æ–π–¥–µ–Ω—ã) –ò–õ–ò (points >= REQUIRED_POINTS)
  React.useEffect(() => {
    const completed = getLocalCompletedCount();
    const points    = getLocalPoints();
    setStateView({completed, points});
    setAllowed(completed >= CORE_LESSONS_COUNT || points >= REQUIRED_POINTS);
  }, [authReady]);

  const SectionCard: React.FC<
    React.PropsWithChildren<{ title: string; icon?: string; muted?: boolean }>
  > = ({ title, icon, children, muted }) => (
    <div
      className={`rounded-2xl border border-[var(--border)] p-4 ${
        muted ? 'bg-[var(--surface-2)]' : 'bg-[var(--surface)]'
      }`}
    >
      <div className="text-[15px] font-semibold mb-2 flex items-center gap-2">
        {icon ? <span className="text-base">{icon}</span> : null}
        <span>{title}</span>
      </div>
      <div className="text-[14px] leading-relaxed">{children}</div>
    </div>
  );

  const Pill: React.FC<React.PropsWithChildren> = ({ children }) => (
    <span className="inline-flex items-center px-2.5 py-1 rounded-full border border-[var(--border)] bg-[var(--bg)] text-[12px] mr-2 mb-2">
      {children}
    </span>
  );

  const BonusContent = () => (
    <section className="space-y-4">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="mb-1">
        <h1 className="text-2xl font-extrabold tracking-tight leading-[1.1]">
          üéÅ –ë–æ–Ω—É—Å-–º–∞—Ç–µ—Ä–∏–∞–ª: —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –Ω–∞–±–æ—Ä –¥–ª—è P2P
        </h1>
        <div className="mt-2 h-[3px] w-24 rounded bg-[var(--brand)]" />
      </header>

      {/* –í—Å—Ç—É–ø–ª–µ–Ω–∏–µ */}
      <SectionCard title="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!" icon="‚ú®">
        <p>
          –¢—ã –ø—Ä–æ—à—ë–ª –º–∏–Ω–∏-–∫—É—Ä—Å –¥–æ –∫–æ–Ω—Ü–∞ ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç. –ù–∏–∂–µ&nbsp;‚Äî –≤—ã–∂–∏–º–∫–∞ —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç
          –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ —à–∞–≥–∏ –≤ P2P: –≥–¥–µ —Ä–∞–±–æ—Ç–∞—Ç—å, —á–µ—Ä–µ–∑ –∫–∞–∫–∏–µ –±–∞–Ω–∫–∏, –∏ –≤ –∫–∞–∫–æ–º
          –ø–æ—Ä—è–¥–∫–µ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.
        </p>
      </SectionCard>

      {/* –ë–∏—Ä–∂–∏ */}
      <SectionCard title="–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏" icon="üè¶">
        <p className="mb-2 text-[13px] text-[var(--muted)]">
          –ù–∞—á–∏–Ω–∞–π —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º. –û–Ω–∏ —É–¥–æ–±–Ω—ã –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ –∏ –¥–∞—é—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å.
        </p>
        <div className="flex flex-wrap">
          <Pill>BingX</Pill>
          <Pill>MEXC</Pill>
          <Pill>Telegram Wallet (TON)</Pill>
        </div>
      </SectionCard>

      {/* –ë–∞–Ω–∫–∏ */}
      <SectionCard title="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –±–∞–Ω–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã" icon="üí≥">
        <ol className="list-decimal pl-5 space-y-1">
          <li>–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫</li>
          <li>Ozon</li>
          <li>–¢-–ë–∞–Ω–∫</li>
          <li>–°–±–µ—Ä–±–∞–Ω–∫</li>
          <li>–Ø–Ω–¥–µ–∫—Å</li>
          <li>–û–¢–ü</li>
          <li>–ü–°–ë</li>
          <li>–í–¢–ë / –†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω</li>
          <li>–°–æ–≤–∫–æ–º</li>
          <li>–ú–ö–ë</li>
        </ol>
        <p className="mt-2 text-[13px] text-[var(--muted)]">
          –ü–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–∞—Ä—ã/–≥–æ—Ä–æ–¥ –≤—ã–±–∏—Ä–∞–π –±–∞–Ω–∫–∏ —Å –ª—É—á—à–∏–º–∏ –ª–∏–º–∏—Ç–∞–º–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å—é –∑–∞—á–∏—Å–ª–µ–Ω–∏–π.
        </p>
      </SectionCard>

      {/* –ú–∏–Ω–∏-–≥–∞–π–¥ */}
      <SectionCard title="–ë—ã—Å—Ç—Ä—ã–π –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π" icon="üöÄ">
        <ul className="list-disc pl-5 space-y-1">
          <li>–°–æ–∑–¥–∞–π –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ –±–∏—Ä–∂ –∏ –ø—Ä–æ–π–¥–∏ –±–∞–∑–æ–≤—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.</li>
          <li>–î–æ–±–∞–≤—å —Ä–∞–±–æ—á–∏–µ –∫–∞—Ä—Ç—ã –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–Ω–∫–æ–≤.</li>
          <li>–û—Ç–∫—Ä–æ–π P2P-—Ä–∞–∑–¥–µ–ª –∏ –ø–æ—Å–º–æ—Ç—Ä–∏ —Å—Ç–∞–∫–∞–Ω —Ü–µ–Ω –Ω–∞ –ø–æ–∫—É–ø–∫—É/–ø—Ä–æ–¥–∞–∂—É USDT.</li>
          <li>–°–¥–µ–ª–∞–π —Ç–µ—Å—Ç–æ–≤—É—é –º–∏–Ω–∏-—Å–¥–µ–ª–∫—É –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å—É–º–º—É, —á—Ç–æ–±—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è.</li>
          <li>–í–µ–¥–∏ –∂—É—Ä–Ω–∞–ª: –±–∞–Ω–∫, —Å—É–º–º–∞, –∫—É—Ä—Å, –º–∞—Ä–∂–∞, –≤—Ä–µ–º—è ‚Äî —Ç–∞–∫ –±—ã—Å—Ç—Ä–µ–µ –≤—ã–π–¥–µ—à—å –Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å.</li>
        </ul>
      </SectionCard>

      {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
      <SectionCard title="–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∑–¥—Ä–∞–≤—ã–π —Å–º—ã—Å–ª" icon="üõ°Ô∏è" muted>
        <ul className="list-disc pl-5 space-y-1">
          <li>–†–∞–±–æ—Ç–∞–π —Ç–æ–ª—å–∫–æ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∞–≤–∏–ª –±–∏—Ä–∂–∏ –∏ –±–∞–Ω–∫–æ–≤ ‚Äî –±–µ–∑ —Å–µ—Ä—ã—Ö —Å—Ö–µ–º.</li>
          <li>–ü—Ä–æ–≤–µ—Ä—è–π –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–µ—Ä–µ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —Å–¥–µ–ª–∫–∏.</li>
          <li>–î–µ—Ä–∂–∏ —Ä–µ–∑–µ—Ä–≤ –Ω–∞ –∫–æ–º–∏—Å—Å–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∏.</li>
          <li>–ù–µ —Å–ø–µ—à–∏: –ª—É—á—à–µ –º–µ–Ω—å—à–µ –æ–±–æ—Ä–æ—Ç, —á–µ–º –ª–∏—à–Ω–∏–π —Ä–∏—Å–∫.</li>
        </ul>
      </SectionCard>

      {/* CTA */}
      <div className="grid grid-cols-1 min-[420px]:grid-cols-2 gap-2 pt-1">
        <button
          onClick={() => router.push('/lesson/1')}
          className="h-11 rounded-xl bg-[var(--surface)] border border-[var(--border)] font-semibold"
          title="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É—Ä–æ–∫–∞–º"
        >
          ‚Üê –ö —É—Ä–æ–∫–∞–º
        </button>
        <button
          onClick={() => router.push('/')}
          className="h-11 rounded-xl bg-[var(--brand)] text-black font-semibold border border-[var(--border)]"
          title="–ù–∞ –≥–ª–∞–≤–Ω—É—é"
        >
          –ù–∞ –≥–ª–∞–≤–Ω—É—é
        </button>
      </div>
    </section>
  );

  const Locked = () => (
    <section className="glass p-6 rounded-2xl w-full text-center">
      <div className="text-2xl mb-2">üîí –ë–æ–Ω—É—Å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞ –∏–ª–∏ –ø—Ä–∏ {REQUIRED_POINTS}+ –æ—á–∫–æ–≤</div>
      <p className="text-[14px] text-[var(--muted)] mb-4">
        –ü—Ä–æ–≥—Ä–µ—Å—Å: {stateView.completed}/{CORE_LESSONS_COUNT} —É—Ä–æ–∫–æ–≤ ¬∑ –û—á–∫–∏: {stateView.points} / {REQUIRED_POINTS}
      </p>
      <div className="flex items-center justify-center gap-2">
        <button
          onClick={() => router.push('/lesson/1')}
          className="h-11 px-4 rounded-xl bg-[var(--brand)] text-black font-semibold border border-[var(--border)]"
        >
          –ü–µ—Ä–µ–π—Ç–∏ –∫ —É—Ä–æ–∫–∞–º
        </button>
      </div>
    </section>
  );

  return (
    <main className={`${WRAP} py-4`}>
      {allowed === null ? (
        <div className="text-center text-[var(--muted)]">–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø‚Ä¶</div>
      ) : allowed ? (
        <BonusContent />
      ) : (
        <Locked />
      )}
      <div className="pb-24" />
    </main>
  );
}
