'use client';

import React, { useEffect, useMemo, useState } from 'react';

/** —à–∏—Ä–∏–Ω–∞ = –∫–∞–∫ —É –º–∏–Ω–∏-–±–∞—Ä–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ globals.css */
const WRAP = 'mx-auto max-w-[var(--content-max)] px-4';

type FormatKey = 'group' | 'pro';

/* –º–∞–ª–µ–Ω—å–∫–∏–π —á–∏–ø-–ø–∞—Ä–∞–º–µ—Ç—Ä */
const Chip: React.FC<{ children: React.ReactNode }> = ({ children }) => (
  <span
    className="inline-flex items-center h-7 px-2.5 rounded-full text-[12px] whitespace-nowrap
               bg-[color-mix(in_oklab,var(--surface-2)60%,transparent)]
               border border-[var(--border)]"
  >
    {children}
  </span>
);

export default function CoursesPage() {
  /* –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ CTA –¥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞ (–æ—Å—Ç–∞–≤—å/—É–±–µ—Ä–∏ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏) */
  const [locked, setLocked] = useState(true);
  useEffect(() => {
    try { setLocked(!(localStorage.getItem('all_completed') === 'true')); } catch {}
  }, []);

  /* –∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã */
  const [open, setOpen] = useState<{ [K in FormatKey]?: boolean }>({});

  /* bottom sheet –∏ –º–æ–¥–∞–ª–∫–∞ –∑–∞—è–≤–∫–∏ (sheet –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫–æ–π, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞) */
  const [sheet, setSheet] = useState(false);
  const [formOpen, setFormOpen] = useState<null | FormatKey>(null);

  /* –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ Telegram */
  const tgUser = useMemo(() => {
    try {
      // @ts-ignore
      const wa = (window as any)?.Telegram?.WebApp;
      const u = wa?.initDataUnsafe?.user;
      if (!u) return null;
      return {
        name: [u.first_name, u.last_name].filter(Boolean).join(' ') || '',
        username: u.username ? `@${u.username}` : '',
      };
    } catch { return null; }
  }, []);

  /* —Ç–µ–∫—Å—Ç—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –ø–æ –¢–ó */
  const formats: Record<FormatKey, {
    title: string;
    emoji: string;
    teaser: string;
    chips: string[];
    bullets: string[];
    audience: string;
    result: string;
    time: string;
    price: string;
    ctaNote?: string;
  }> = {
    group: {
      title: '–ì—Ä—É–ø–ø–æ–≤–æ–π –∫—É—Ä—Å: –ê—Ä–µ–Ω–¥–∞ –∑–∞ –ö—Ä–∏–ø—Ç—É',
      emoji: 'üßë‚Äçü§ù‚Äçüßë',
      teaser:
        '1 –Ω–µ–¥–µ–ª—è —ç—Ñ–∏—Ä–æ–≤ + –ø—Ä–∞–∫—Ç–∏–∫–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç: –¥–æ—Ö–æ–¥ –æ—Ç ~70 000 ‚ÇΩ/–º–µ—Å –ø—Ä–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–≤—è–∑–∫–∞–º–∏.',
      chips: ['‚è± 1 –Ω–µ–¥–µ–ª—è', 'üßë‚Äçü§ù‚Äçüßë –ì—Ä—É–ø–ø–∞+—á–∞—Ç', 'üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –Ω–µ–¥.'],
      bullets: [
        '5 —ç—Ñ–∏—Ä–æ–≤ (–ø–Ω‚Äì–ø—Ç) + 2 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –¥–Ω—è',
        '–¢–∞–±–ª–∏—Ü—ã —É—á—ë—Ç–∞ —Å–¥–µ–ª–æ–∫ –∏ –¥–æ—Ö–æ–¥–∞',
        '1 —Å–≤—è–∑–∫–∞ –±–µ–∑ –∫–∞—Ä—Ç (–¥–æ ~2% –∫ –∫–∞–ø–∏—Ç–∞–ª—É –≤ –¥–µ–Ω—å) –∏ 2 —Å–≤—è–∑–∫–∏ —Å –∫–∞—Ä—Ç–∞–º–∏ (–¥–æ ~7% –∫ –∫–∞–ø–∏—Ç–∞–ª—É –≤ –¥–µ–Ω—å)',
        '–î–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É —Å —É—á–µ–Ω–∏–∫–∞–º–∏',
        '–î–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É —Å –ø–æ–ª–µ–∑–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–º –∏ –ò–ò (–º–∞–Ω—É–∞–ª—ã, —Å–≤—è–∑–∫–∏, —Å—Ö–µ–º—ã)',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ 3 –Ω–µ–¥–µ–ª–∏',
      ],
      audience:
        '¬´–ü–æ–ª–Ω—ã–π –Ω–æ–≤–∏—á–æ–∫¬ª, –∫–æ–º—É –Ω—É–∂–µ–Ω –ø–æ–Ω—è—Ç–Ω—ã–π —Å—Ç–∞—Ä—Ç –∏ –¥–æ—Ö–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∞—Ä–µ–Ω–¥—É –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏–ª–∏ –±–∞–∑–æ–≤—ã–µ —Ä–∞—Å—Ö–æ–¥—ã. –ù–∏–∫—Ç–æ –Ω–µ —É—Ö–æ–¥–∏—Ç –±–µ–∑ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ —Å–ø–æ—Å–æ–±–∞.',
      result:
        '–ë–∞–∑–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –æ—Ç ~70 000 ‚ÇΩ/–º–µ—Å, –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤, —É–º–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –∏ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤—è–∑–∫–∏ –ø–æ–¥ —Å–µ–±—è. –≠—Ç–æ –Ω–µ –æ–¥–Ω–∞ ¬´—Å—Ö–µ–º–∞¬ª, –∞ –∫–æ–º–ø–ª–µ–∫—Å –Ω–∞–≤—ã–∫–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.',
      time: '1‚Äì2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å, —Å—Ç–∞—Ä—Ç ‚Äî —Ä–∞–∑ –≤ –º–µ—Å—è—Ü',
      price: '50 000 ‚ÇΩ. –î–æ—Å—Ç—É–ø–Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞.',
    },
    pro: {
      title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ: –ö—Ä–∏–ø—Ç–æ–ú–∞—Ä—Å PRO',
      emoji: 'üíº',
      teaser:
        '–õ–∏—á–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å –ú–∞—Ä—Å–µ–ª–µ–º. –£—Å–∫–æ—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç, –¥–æ—Ö–æ–¥ —Å–æ –≤—Ç–æ—Ä–æ–≥–æ –¥–Ω—è –∏ –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞.',
      chips: ['üéØ 1:1 —Å–æ–∑–≤–æ–Ω—ã', 'üß© –õ–∏—á–Ω—ã–µ —Å–≤—è–∑–∫–∏', '‚ôæ –ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'],
      bullets: [
        '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –º–Ω–æ–≥–æ—Å–ª–æ–π–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–¥ –≤–∞—à–∏ —Ü–µ–ª–∏',
        '2 —Å–≤—è–∑–∫–∏ –±–µ–∑ –∫–∞—Ä—Ç (–¥–æ ~3% –∫ –∫–∞–ø–∏—Ç–∞–ª—É –≤ –¥–µ–Ω—å) –∏ 3 —Å–≤—è–∑–∫–∏ —Å –∫–∞—Ä—Ç–∞–º–∏ (–¥–æ ~10% –∫ –∫–∞–ø–∏—Ç–∞–ª—É –≤ –¥–µ–Ω—å)',
        '–ó–∞—Ä–∞–±–æ—Ç–æ–∫ —Å–æ 2-–≥–æ –¥–Ω—è –æ–±—É—á–µ–Ω–∏—è',
        '–¢–∞–±–ª–∏—Ü–∞ —É—á—ë—Ç–∞ —Å–¥–µ–ª–æ–∫ –∏ –¥–æ—Ö–æ–¥–∞',
        '–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Ö–æ–¥–∞: –ø–µ—Ä–µ—Ö–æ–¥ –æ—Ç ¬´—Ä—É—á–Ω–æ–≥–æ¬ª –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É',
        '–ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
        '–î–æ—Å—Ç—É–ø –≤ –∫–ª—É–± –ö—Ä–∏–ø—Ç–æ–ú–∞—Ä—Å:',
        '–ß–∞—Ç —Å —É—á–µ–Ω–∏–∫–∞–º–∏ ‚Äî —Ä–∞–∑–±–æ—Ä –∫–µ–π—Å–æ–≤, –ø–æ–º–æ—â—å –≤ —Å–ø–æ—Ä–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö',
        '–ü–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã ‚Äî –º–∞–Ω—É–∞–ª—ã, –≥–∞–π–¥—ã, –Ω–æ–≤—ã–µ —Å–≤—è–∑–∫–∏',
        '–ß–∞—Ç –ø—Ä–æ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ ‚Äî —Å–≤–µ–∂–∏–µ —Å—Ö–µ–º—ã, –∫–∞–∫ –Ω–µ –ø–æ–ø–∞—Å—Ç—å—Å—è',
        '–ß–∞—Ç —Å –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –æ—Ñ–ª–∞–π–Ω-–æ–±–º–µ–Ω–Ω–∏–∫–∞–º–∏',
      ],
      audience:
        '–¢–µ–º, –∫–æ–º—É –Ω—É–∂–µ–Ω –±—ã—Å—Ç—Ä—ã–π –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥ –≤–∞—à —Ä–µ–∂–∏–º (–≥—Ä–∞—Ñ–∏–∫, —Ü–µ–ª–∏, –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏).',
      result:
        '–í—ã—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ª–∏—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –≤—ã—Ö–æ–¥ –Ω–∞ –¥–æ—Ö–æ–¥ –¥–æ ~200 000 ‚ÇΩ/–º–µ—Å –∏ –ø–ª–∞–Ω –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–µ–∑ —Å—Ä–æ–∫–∞.',
      time: '–ì—Ä–∞—Ñ–∏–∫ –ø–æ–¥ –≤–∞—Å, —Å—Ç–∞—Ä—Ç ‚Äî –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏',
      price: '90 000 ‚ÇΩ. –î–æ—Å—Ç—É–ø–Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ä–∞—Å—Å—Ä–æ—á–∫–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞.',
    },
  };

  const openForm = (fmt: FormatKey) => setFormOpen(fmt);

  return (
    <main className={`${WRAP} py-4`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="mb-3 w-full">
        <h1 className="text-2xl font-extrabold tracking-tight leading-[1.1]">–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥</h1>
        <p className="mt-2 text-sm text-[var(--muted)]">
          –ü–æ–∫–∞–∑–∞–Ω—ã –¥–≤–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –æ–±—É—á–µ–Ω–∏—è. –ö–æ—Ä–æ—Ç–∫–æ ‚Äî –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö, –¥–µ—Ç–∞–ª–∏ ‚Äî –ø–æ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª.
        </p>
      </header>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∏-–∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã */}
      <section className="w-full space-y-3">
        {(Object.keys(formats) as FormatKey[]).map((key) => {
          const f = formats[key];
          const expanded = !!open[key];

          return (
            <article
              key={key}
              className={`card w-full space-y-3 rounded-2xl ${expanded ? 'shadow-[0_12px_32px_rgba(0,0,0,.35)]' : ''}`}
            >
              {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å: –∏–∫–æ–Ω–∫–∞ + –∑–∞–≥–æ–ª–æ–≤–æ–∫ + —Ç–∏–∑–µ—Ä + —á–∏–ø—ã + –¥–≤–µ –∫–Ω–æ–ø–∫–∏ */}
              <div className="grid grid-cols-[40px_1fr] gap-3">
                {/* –ò–∫–æ–Ω–∫–∞ ‚Äî —Å—Ç—Ä–æ–≥–æ 40√ó40 */}
                <div className="w-10 h-10 rounded-xl grid place-items-center bg-[var(--surface-2)] border border-[var(--border)] text-[18px] leading-none">
                  {f.emoji}
                </div>

                <div className="min-w-0">
                  <h3 className="text-[18px] font-semibold leading-tight">{f.title}</h3>

                  {/* —Ç–∏–∑–µ—Ä ‚Äî clamp –¥–æ 2 —Å—Ç—Ä–æ–∫ */}
                  <p
                    className="mt-1 text-[14px] text-[var(--muted)] leading-snug overflow-hidden"
                    style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}
                  >
                    {f.teaser}
                  </p>

                  {/* –ß–ò–ü–´: –≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω—ã ‚Üí –ø–µ—Ä–µ–Ω–æ—Å –ø–æ —Å—Ç—Ä–æ–∫–∞–º */}
                  <div className="mt-2 flex gap-2 flex-wrap">
                    {f.chips.map((c, i) => <Chip key={i}>{c}</Chip>)}
                  </div>

                  {/* –¥–≤–µ —Ä–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
                  <div className="mt-3 grid grid-cols-2 gap-2">
                    <button
                      disabled={locked}
                      onClick={() => openForm(key)}
                      className={`h-11 w-full rounded-xl font-semibold border
                                  ${locked
                                    ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                                    : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
                    >
                      {locked ? '–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞' : '–ó–∞—è–≤–∫–∞'}
                    </button>
                    <button
                      onClick={() => setOpen((s) => ({ ...s, [key]: !expanded }))}
                      className="h-11 w-full rounded-xl font-semibold border border-[var(--border)]
                                 bg-[var(--surface)] active:translate-y-[1px]"
                    >
                      {expanded ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'}
                    </button>
                  </div>
                </div>
              </div>

              {/* –†–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
              {expanded && (
                <div className="pt-3 border-t border-[var(--border)] space-y-3">
                  {/* –ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ */}
                  <div>
                    <div className="font-semibold mb-1">–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏</div>
                    <ul className="list-disc pl-5 space-y-1 text-[14px]">
                      {f.bullets.map((b, i) => (
                        <li key={i}>{b}</li>
                      ))}
                    </ul>
                  </div>

                  {/* –î–ª—è –∫–æ–≥–æ */}
                  <div>
                    <div className="font-semibold mb-1">–î–ª—è –∫–æ–≥–æ</div>
                    <p className="text-[14px] text-[var(--muted)]">{f.audience}</p>
                  </div>

                  {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
                  <div>
                    <div className="font-semibold mb-1">–†–µ–∑—É–ª—å—Ç–∞—Ç</div>
                    <p className="text-[14px] text-[var(--muted)]">{f.result}</p>
                  </div>

                  {/* –í—Ä–µ–º—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è */}
                  <div>
                    <div className="font-semibold mb-1">–í—Ä–µ–º—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</div>
                    <p className="text-[14px] text-[var(--muted)]">{f.time}</p>
                  </div>

                  {/* –¶–µ–Ω–∞ */}
                  <div>
                    <div className="font-semibold mb-1">–¶–µ–Ω–∞</div>
                    <p className="text-[14px] text-[var(--muted)]">{f.price}</p>
                  </div>

                  {/* –±–æ–ª—å—à–æ–π CTA */}
                  <button
                    disabled={locked}
                    onClick={() => openForm(key)}
                    className={`mt-1 w-full h-11 rounded-xl font-semibold border
                                ${locked
                                  ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                                  : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
                  >
                    {locked ? '–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞' : '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </button>
                  {f.ctaNote && (
                    <p className="text-xs text-center text-[var(--muted)]">{f.ctaNote}</p>
                  )}
                </div>
              )}
            </article>
          );
        })}
      </section>

      <p className="mt-6 pb-24 text-center text-xs text-[var(--muted)]">@your_bot</p>

      {/* bottom sheet (–æ—Å—Ç–∞–≤–ª–µ–Ω –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏; –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –µ—Å–ª–∏ setSheet(true)) */}
      {sheet && (
        <div className="fixed inset-0 z-[60]">
          <div className="absolute inset-0 bg-black/50" onClick={() => setSheet(false)} />
          <div className="absolute left-1/2 -translate-x-1/2 bottom-0 w-full max-w-[var(--content-max)]
                          rounded-t-2xl bg-[var(--surface)] border-t border-[var(--border)] p-4">
            <div className="mx-auto h-1.5 w-12 rounded-full bg-[var(--border)] mb-3" />
            <div className="text-lg font-bold mb-2">–°—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç—ã</div>

            <div className="space-y-2 text-sm">
              {[
                ['–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '1 –Ω–µ–¥–µ–ª—è + 3 –Ω–µ–¥. –ø–æ–¥–¥–µ—Ä–∂–∫–∏', '4 —Å–æ–∑–≤–æ–Ω–∞ + —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ'],
                ['–§–æ—Ä–º–∞—Ç', '–≠—Ñ–∏—Ä—ã + –∑–∞–¥–∞–Ω–∏—è', '1:1 —Å–æ–∑–≤–æ–Ω—ã'],
                ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ë–æ—Ç, —á–µ–∫-–ª–∏—Å—Ç—ã', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∫–∏'],
                ['–ü–æ–¥–¥–µ—Ä–∂–∫–∞', '3 –Ω–µ–¥–µ–ª–∏', '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'],
                ['–î–ª—è –∫–æ–≥–æ', '–°—Ç–∞—Ä—Ç —Å –Ω—É–ª—è', '–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç'],
                ['–†–µ–∑—É–ª—å—Ç–∞—Ç', '–ü–µ—Ä–≤—ã–µ —Å–¥–µ–ª–∫–∏', '–°–∏—Å—Ç–µ–º–∞ + –º–∞—Å—à—Ç–∞–±'],
                ['–û–ø–ª–∞—Ç–∞', '–†–∞–∑–æ–≤–∞—è / —Ä–∞—Å—Å—Ä–æ—á–∫–∞', '–†–∞–∑–æ–≤–∞—è / —Ä–∞—Å—Å—Ä–æ—á–∫–∞'],
              ].map((row, i) => (
                <div
                  key={i}
                  className="grid grid-cols-1 gap-1 rounded-xl border border-[var(--border)] p-2
                             min-[420px]:grid-cols-[1.05fr_.95fr_.95fr]"
                >
                  <div className="font-semibold">{row[0]}</div>
                  <div className="text-[var(--muted)]">{row[1]}</div>
                  <div className="text-[var(--muted)]">{row[2]}</div>
                </div>
              ))}
            </div>

            <div className="mt-3 grid grid-cols-2 gap-2">
              <button
                className="h-11 rounded-xl bg-[var(--brand)] text-black font-semibold
                           border border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]"
                onClick={() => { setSheet(false); setFormOpen('group'); }}
              >
                –ó–∞—è–≤–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π –∫—É—Ä—Å
              </button>
              <button
                className="h-11 rounded-xl bg-[var(--surface-2)] border border-[var(--border)] font-semibold active:translate-y-[1px]"
                onClick={() => { setSheet(false); setFormOpen('pro'); }}
              >
                –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ 1:1
              </button>
            </div>
          </div>
        </div>
      )}

      {/* –º–æ–¥–∞–ª–∫–∞ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª */}
      {formOpen && (
        <FormModal
          formatKey={formOpen}
          title={formats[formOpen].title}
          onClose={() => setFormOpen(null)}
          locked={locked}
          tgName={tgUser?.name || ''}
          tgUsername={tgUser?.username || ''}
          onSubmit={(payload) => {
            // TODO: –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞/–≤–µ–±—Ö—É–∫
            console.log('REQUEST:', payload);
            alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ú® –ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ Telegram.');
            setFormOpen(null);
          }}
        />
      )}
    </main>
  );
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Ñ–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function FormModal(props: {
  formatKey: FormatKey;
  title: string;
  locked: boolean;
  tgName: string;
  tgUsername: string;
  onClose: () => void;
  onSubmit: (payload: {
    format: FormatKey;
    name: string;
    handle: string;
    phone: string;
    start: 'now' | 'month' | 'unsure';
    comment: string;
    agree: boolean;
  }) => void;
}) {
  const [name, setName] = useState(props.tgName);
  const [handle, setHandle] = useState(props.tgUsername);
  const [phone, setPhone] = useState('');
  const [start, setStart] = useState<'now' | 'month' | 'unsure'>('now');
  const [comment, setComment] = useState('');
  const [agree, setAgree] = useState(false);

  const submit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!agree || props.locked) return;
    props.onSubmit({
      format: props.formatKey,
      name, handle, phone, start, comment, agree,
    });
  };

  return (
    <div className="fixed inset-0 z-[70]">
      <div className="absolute inset-0 bg-black/50" onClick={props.onClose} />
      <div
        className="absolute left-1/2 -translate-x-1/2 top-6 w-[min(92vw,420px)]
                   rounded-2xl bg-[var(--surface)] border border-[var(--border)] p-4"
      >
        <div className="text-lg font-bold">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</div>
        <p className="text-sm text-[var(--muted)] mt-0.5">{props.title}</p>

        <form className="mt-3 space-y-2" onSubmit={submit}>
          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ò–º—è</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none w-full"
              value={name} onChange={(e)=>setName(e.target.value)} placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ù–∏–∫/—Ç–µ–ª–µ–≥—Ä–∞–º</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none w-full"
              value={handle} onChange={(e)=>setHandle(e.target.value)} placeholder="@username"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–¢–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none w-full"
              value={phone} onChange={(e)=>setPhone(e.target.value)} placeholder="+7‚Ä¶"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–£–¥–æ–±–Ω—ã–π —Å—Ç–∞—Ä—Ç</label>
            <select
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none w-full"
              value={start} onChange={(e)=>setStart(e.target.value as any)}
            >
              <option value="now">–Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ</option>
              <option value="month">–≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞</option>
              <option value="unsure">—É—Ç–æ—á–Ω—é</option>
            </select>
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <textarea
              className="min-h-[72px] rounded-xl px-3 py-2 bg-[var(--surface-2)] border border-[var(--border)]
                         outline-none resize-y w-full"
              value={comment} onChange={(e)=>setComment(e.target.value)} placeholder="–ö–æ—Ä–æ—Ç–∫–æ –æ –∑–∞–¥–∞—á–µ, –æ–ø—ã—Ç–µ, –±–∞–Ω–∫–∞—Ö‚Ä¶"
            />
          </div>

          <label className="flex items-center gap-2 text-sm">
            <input type="checkbox" checked={agree} onChange={(e)=>setAgree(e.target.checked)} />
            <span>–°–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö</span>
          </label>

          <div className="grid grid-cols-2 gap-2 pt-1">
            <button
              type="button"
              onClick={props.onClose}
              className="h-11 rounded-xl bg-[var(--surface-2)] border border-[var(--border)] font-semibold w-full"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={!agree || props.locked}
              className={`h-11 rounded-xl font-semibold border w-full
                ${(!agree || props.locked)
                  ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                  : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </button>
          </div>

          <p className="text-xs text-center text-[var(--muted)] pt-1">
            –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ Telegram.
          </p>
        </form>
      </div>
    </div>
  );
}
