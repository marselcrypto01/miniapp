'use client';

import React, { useEffect, useMemo, useState } from 'react';
import { useRouter } from 'next/navigation';

/** –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å –º–∏–Ω–∏-–±–∞—Ä–æ–º */
const WRAP = 'mx-auto max-w-[var(--content-max)] px-4';

type FormatKey = 'group' | 'pro';

/** —á–∏–ø */
const Chip: React.FC<{ children: React.ReactNode }> = ({ children }) => (
  <span className="inline-flex items-center px-2.5 h-7 rounded-full text-[12px] whitespace-nowrap
                   bg-[color-mix(in_oklab,var(--surface-2)60%,transparent)]
                   border border-[var(--border)]">
    {children}
  </span>
);

export default function CoursesPage() {
  const router = useRouter();

  /* –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∑–∞—è–≤–∫–∏, –µ—Å–ª–∏ –∫—É—Ä—Å –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω */
  const [locked, setLocked] = useState(true);
  useEffect(() => {
    try { setLocked(!(localStorage.getItem('all_completed') === 'true')); } catch {}
  }, []);

  /* –∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã */
  const [open, setOpen] = useState<{ [K in FormatKey]?: boolean }>({});

  /* —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ (bottom sheet) –∏ —Ñ–æ—Ä–º–∞ –∑–∞—è–≤–∫–∏ (modal) */
  const [sheet, setSheet] = useState(false);
  const [formOpen, setFormOpen] = useState<null | FormatKey>(null);

  /* –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ Telegram */
  const tgUser = useMemo(() => {
    try {
      // @ts-ignore
      const wa = (window as any)?.Telegram?.WebApp;
      const u = wa?.initDataUnsafe?.user;
      if (!u) return null;
      return {
        name: [u.first_name, u.last_name].filter(Boolean).join(' ') || undefined,
        username: u.username ? `@${u.username}` : undefined,
      };
    } catch { return null; }
  }, []);

  const formats: Record<FormatKey, {
    title: string;
    teaser: string;
    bullets: string[];
    audience: string;
    result: string;
    time: string;
    chips: string[];
    emoji: string;
    ctaNote: string;
  }> = {
    group: {
      title: '–ì—Ä—É–ø–ø–æ–≤–æ–π –∫—É—Ä—Å: –ê—Ä–µ–Ω–¥–∞ –∑–∞ –ö—Ä–∏–ø—Ç—É',
      teaser:
        '1 –Ω–µ–¥–µ–ª—è —ç—Ñ–∏—Ä–æ–≤ + –ø—Ä–∞–∫—Ç–∏–∫–∞. –ó–∞ –º–µ—Å—è—Ü ‚Äî –ø–µ—Ä–≤—ã–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –∏ –¥–æ—Ö–æ–¥, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –¥–ª—è –∞—Ä–µ–Ω–¥—ã.',
      bullets: [
        '5 —ç—Ñ–∏—Ä–æ–≤ (–ø–Ω-–ø—Ç) + 2 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –¥–Ω—è',
        '–ß–µ–∫-–ª–∏—Å—Ç—ã, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ä–∞–∑–±–æ—Ä —Ä–∏—Å–∫–æ–≤',
        '–î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –±–æ—Ç—É —Å –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏',
        '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ —á–∞—Ç–µ 3 –Ω–µ–¥–µ–ª–∏',
      ],
      audience: '¬´–ü–æ–ª–Ω—ã–π –Ω–æ–ª—å¬ª, –∫—Ç–æ —Ö–æ—á–µ—Ç –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç',
      result:
        '–ü–æ–Ω–∏–º–∞–µ—Ç–µ –º–µ—Ö–∞–Ω–∏–∫—É –∞—Ä–±–∏—Ç—Ä–∞–∂–∞, —É–º–µ–µ—Ç–µ –¥–µ–ª–∞—Ç—å —Å–¥–µ–ª–∫–∏, –≤—ã—Ö–æ–¥ –Ω–∞ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥ –¥–ª—è –∞—Ä–µ–Ω–¥—ã',
      time: '1‚Äì2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å, —Å—Ç–∞—Ä—Ç ‚Äî –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ',
      chips: ['‚è± 1 –Ω–µ–¥–µ–ª—è —ç—Ñ–∏—Ä–æ–≤', 'üßë‚Äçü§ù‚Äçüßë –ì—Ä—É–ø–ø–∞ + —á–∞—Ç', 'üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 3 –Ω–µ–¥–µ–ª–∏'],
      emoji: 'üë•',
      ctaNote: '–†–∞—Å—Å—Ä–æ—á–∫–∞ —á–µ—Ä–µ–∑ –°–±–µ—Ä ‚Äî –ø–æ –∑–∞–ø—Ä–æ—Å—É',
    },
    pro: {
      title: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ: –ö—Ä–∏–ø—Ç–æ–ú–∞—Ä—Å PRO',
      teaser:
        '4 —Å–æ–∑–≤–æ–Ω–∞ 1:1, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∫–∏, –±—ã—Å—Ç—Ä—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –±–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞.',
      bullets: [
        '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω',
        '–†–∞–∑–±–æ—Ä –≤–∞—à–∏—Ö –±–∞–Ω–∫–æ–≤/–ø–ª–∞—Ç—ë–∂–µ–∫ –∏ —Ä–∏—Å–∫–æ–≤',
        '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—á–∏—Ö —Å–≤—è–∑–æ–∫ –ø–æ–¥ –≤–∞—à —Ä–µ–∂–∏–º',
        '–ë–µ—Å—Å—Ä–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –¥–æ—Å—Ç—É–ø –≤ –∫–ª—É–±',
      ],
      audience: '–ö–æ–º—É –Ω—É–∂–µ–Ω –±—ã—Å—Ç—Ä—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥',
      result: '–í—ã—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –ª–∏—á–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞, —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ',
      time: '–ì—Ä–∞—Ñ–∏–∫ –ø–æ–¥ –≤–∞—Å, —Å—Ç–∞—Ä—Ç –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏',
      chips: ['üéØ 1:1 —Å–æ–∑–≤–æ–Ω—ã', 'üß© –õ–∏—á–Ω—ã–µ —Å–≤—è–∑–∫–∏', '‚ôæ –ë–µ—Å—Å—Ä–æ—á–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É'],
      emoji: 'üíº',
      ctaNote: '–†–∞—Å—Å—Ä–æ—á–∫–∞ ‚Äî –ø–æ –∑–∞–ø—Ä–æ—Å—É',
    },
  };

  const openForm = (fmt: FormatKey) => setFormOpen(fmt);

  return (
    <main className={`${WRAP} py-4`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <header className="mb-3 w-full">
        <h1 className="text-2xl font-extrabold tracking-tight leading-[1.1]">–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥</h1>
        <p className="mt-2 text-sm text-[var(--muted)]">
          –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è.
        </p>
      </header>

      {/* –°—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç—ã */}
      <div className="w-full mb-3">
        <button
          onClick={() => setSheet(true)}
          className="w-full h-10 rounded-xl border border-[var(--border)] bg-[var(--surface)]
                     text-sm font-semibold active:translate-y-[1px]"
        >
          –°—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç—ã
        </button>
      </div>

      {/* –ö–∞—Ä—Ç–æ—á–∫–∏-–∞–∫–∫–æ—Ä–¥–µ–æ–Ω—ã */}
      <section className="w-full space-y-3">
        {(Object.keys(formats) as FormatKey[]).map((key) => {
          const f = formats[key];
          const expanded = !!open[key];

          return (
            <article
              key={key}
              className={`glass rounded-2xl w-full transition-shadow ${expanded ? 'shadow-[0_12px_32px_rgba(0,0,0,.35)]' : ''}`}
            >
              {/* –®–∞–ø–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
              <div className="p-4">
                <div className="flex items-start gap-3">
                  <div className="grid place-items-center text-xl w-10 h-10 rounded-lg bg-[var(--surface-2)] border border-[var(--border)]">
                    {f.emoji}
                  </div>
                  <div className="min-w-0 grow">
                    <div className="font-semibold text-[18px] leading-tight">{f.title}</div>

                    {/* —Ç–∏–∑–µ—Ä ‚Äî 2 —Å—Ç—Ä–æ–∫–∏, clamp */}
                    <p
                      className="mt-1 text-[14px] text-[var(--muted)] leading-snug overflow-hidden"
                      style={{ display: '-webkit-box', WebkitLineClamp: 2, WebkitBoxOrient: 'vertical' }}
                    >
                      {f.teaser}
                    </p>

                    {/* —á–∏–ø—ã ‚Äî –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–∫—Ä–æ–ª–ª–æ–º */}
                    <div className="mt-2 flex items-center gap-1.5 overflow-x-auto no-scrollbar">
                      {f.chips.map((c, i) => <Chip key={i}>{c}</Chip>)}
                    </div>

                    {/* CTA –≤ —à–∞–ø–∫–µ: –º–∏–Ω–∏-–∫–Ω–æ–ø–∫–∏ */}
                    <div className="mt-3 flex items-center gap-2">
                      <button
                        disabled={locked}
                        onClick={() => openForm(key)}
                        className={`h-9 px-3 rounded-lg text-sm font-semibold border
                                    ${locked
                                      ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                                      : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
                      >
                        {locked ? '–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞' : '–ó–∞—è–≤–∫–∞'}
                      </button>
                      <button
                        onClick={() => setOpen((s) => ({ ...s, [key]: !expanded }))}
                        className="h-9 px-3 rounded-lg text-sm font-semibold border border-[var(--border)]
                                   bg-[var(--surface)] active:translate-y-[1px]"
                      >
                        {expanded ? '–°–≤–µ—Ä–Ω—É—Ç—å' : '–ü–æ–¥—Ä–æ–±–Ω–µ–µ'}
                      </button>
                    </div>
                  </div>
                </div>
              </div>

              {/* –†–∞–∑–≤–æ—Ä–æ—Ç */}
              {expanded && (
                <div className="px-4 pb-4 pt-0">
                  <div className="h-px w-full bg-[var(--border)] mb-3" />

                  <div className="space-y-3 text-[14px]">
                    <div>
                      <div className="font-semibold mb-1">–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏</div>
                      <ul className="list-disc pl-5 space-y-1">
                        {f.bullets.map((b, i) => <li key={i}>{b}</li>)}
                      </ul>
                    </div>

                    <div>
                      <div className="font-semibold mb-1">–î–ª—è –∫–æ–≥–æ</div>
                      <p className="text-[var(--muted)]">{f.audience}</p>
                    </div>

                    <div>
                      <div className="font-semibold mb-1">–†–µ–∑—É–ª—å—Ç–∞—Ç</div>
                      <p className="text-[var(--muted)]">{f.result}</p>
                    </div>

                    <div>
                      <div className="font-semibold mb-1">–í—Ä–µ–º—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</div>
                      <p className="text-[var(--muted)]">{f.time}</p>
                    </div>
                  </div>

                  {/* –ë–æ–ª—å—à–æ–π CTA –≤ —Ä–∞–∑–≤–æ—Ä–æ—Ç–µ */}
                  <button
                    disabled={locked}
                    onClick={() => openForm(key)}
                    className={`mt-3 w-full h-11 rounded-xl font-semibold border
                                ${locked
                                  ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                                  : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
                  >
                    {locked ? '–î–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞' : '–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'}
                  </button>
                  <p className="mt-1 text-xs text-center text-[var(--muted)]">{f.ctaNote}</p>
                </div>
              )}
            </article>
          );
        })}
      </section>

      <p className="mt-6 pb-24 text-center text-xs text-[var(--muted)]">@your_bot</p>

      {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Bottom Sheet: —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
      {sheet && (
        <div className="fixed inset-0 z-[60]">
          <div className="absolute inset-0 bg-black/50" onClick={() => setSheet(false)} />
          <div className="absolute left-1/2 -translate-x-1/2 bottom-0 w-full max-w-[var(--content-max)]
                          rounded-t-2xl bg-[var(--surface)] border-t border-[var(--border)] p-4">
            <div className="mx-auto h-1.5 w-12 rounded-full bg-[var(--border)] mb-3" />
            <div className="text-lg font-bold mb-2">–°—Ä–∞–≤–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç—ã</div>

            <div className="space-y-2 text-sm">
              {[
                ['–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', '1 –Ω–µ–¥–µ–ª—è + 3 –Ω–µ–¥. –ø–æ–¥–¥–µ—Ä–∂–∫–∏', '4 —Å–æ–∑–≤–æ–Ω–∞ + —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ'],
                ['–§–æ—Ä–º–∞—Ç', '–≠—Ñ–∏—Ä—ã + –∑–∞–¥–∞–Ω–∏—è', '1:1 —Å–æ–∑–≤–æ–Ω—ã'],
                ['–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', '–ë–æ—Ç, —á–µ–∫-–ª–∏—Å—Ç—ã', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∫–∏'],
                ['–ü–æ–¥–¥–µ—Ä–∂–∫–∞', '3 –Ω–µ–¥–µ–ª–∏', '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'],
                ['–î–ª—è –∫–æ–≥–æ', '–°—Ç–∞—Ä—Ç —Å –Ω—É–ª—è', '–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç'],
                ['–†–µ–∑—É–ª—å—Ç–∞—Ç', '–ü–µ—Ä–≤—ã–µ —Å–¥–µ–ª–∫–∏', '–°–∏—Å—Ç–µ–º–∞ + –º–∞—Å—à—Ç–∞–±'],
                ['–û–ø–ª–∞—Ç–∞', '–†–∞–∑–æ–≤–∞—è / —Ä–∞—Å—Å—Ä–æ—á–∫–∞', '–†–∞—Å—Å—Ä–æ—á–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É'],
              ].map((row, i) => (
                <div key={i} className="grid grid-cols-1 gap-1 rounded-xl border border-[var(--border)] p-2
                                        min-[420px]:grid-cols-[1.1fr_.9fr_.9fr]">
                  <div className="font-semibold">{row[0]}</div>
                  <div className="text-[var(--muted)]">{row[1]}</div>
                  <div className="text-[var(--muted)]">{row[2]}</div>
                </div>
              ))}
            </div>

            <div className="mt-3 grid grid-cols-2 gap-2">
              <button
                className="h-10 rounded-xl bg-[var(--brand)] text-black font-semibold
                           border border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]"
                onClick={() => { setSheet(false); openForm('group'); }}
              >
                –ó–∞—è–≤–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É
              </button>
              <button
                className="h-10 rounded-xl bg-[var(--surface-2)] border border-[var(--border)] font-semibold active:translate-y-[1px]"
                onClick={() => { setSheet(false); openForm('pro'); }}
              >
                –ó–∞—è–≤–∫–∞ 1:1
              </button>
            </div>
          </div>
        </div>
      )}

      {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ú–æ–¥–∞–ª–∫–∞ ¬´–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É¬ª ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}
      {formOpen && (
        <FormModal
          formatKey={formOpen}
          title={formats[formOpen].title}
          onClose={() => setFormOpen(null)}
          locked={locked}
          tgName={tgUser?.name}
          tgUsername={tgUser?.username}
          onSubmit={(payload) => {
            // TODO: —Å—é–¥–∞ –ø–æ—Å—Ç–∞–≤—å —Å–≤–æ–π webhook/–±–æ—Ç–∞
            console.log('REQUEST:', payload);
            alert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ‚ú® –ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ Telegram.');
            setFormOpen(null);
            // router.push('/consult'); // –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å
          }}
        />
      )}
    </main>
  );
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –§–û–†–ú–ê –ó–ê–Ø–í–ö–ò ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
function FormModal(props: {
  formatKey: FormatKey;
  title: string;
  locked: boolean;
  tgName?: string;
  tgUsername?: string;
  onClose: () => void;
  onSubmit: (payload: {
    format: FormatKey;
    name?: string;
    handle?: string;
    phone?: string;
    start?: string;
    comment?: string;
    agree: boolean;
  }) => void;
}) {
  const [name, setName] = useState(props.tgName || '');
  const [handle, setHandle] = useState(props.tgUsername || '');
  const [phone, setPhone] = useState('');
  const [start, setStart] = useState<'now' | 'month' | 'unsure'>('now');
  const [comment, setComment] = useState('');
  const [agree, setAgree] = useState(false);

  const submit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!agree) return;
    props.onSubmit({
      format: props.formatKey,
      name,
      handle,
      phone,
      start,
      comment,
      agree,
    });
  };

  return (
    <div className="fixed inset-0 z-[70]">
      <div className="absolute inset-0 bg-black/50" onClick={props.onClose} />
      <div className="absolute left-1/2 -translate-x-1/2 top-6 w-[min(92vw, var(--content-max))] rounded-2xl
                      bg-[var(--surface)] border border-[var(--border)] p-4">
        <div className="text-lg font-bold">–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</div>
        <p className="text-sm text-[var(--muted)] mt-0.5">{props.title}</p>

        <form className="mt-3 space-y-2" onSubmit={submit}>
          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ò–º—è</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none"
              value={name} onChange={(e)=>setName(e.target.value)} placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ù–∏–∫/—Ç–µ–ª–µ–≥—Ä–∞–º</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none"
              value={handle} onChange={(e)=>setHandle(e.target.value)} placeholder="@username"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–¢–µ–ª–µ—Ñ–æ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <input
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none"
              value={phone} onChange={(e)=>setPhone(e.target.value)} placeholder="+7‚Ä¶"
            />
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–£–¥–æ–±–Ω—ã–π —Å—Ç–∞—Ä—Ç</label>
            <select
              className="h-10 rounded-xl px-3 bg-[var(--surface-2)] border border-[var(--border)] outline-none"
              value={start} onChange={(e)=>setStart(e.target.value as any)}
            >
              <option value="now">–Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ</option>
              <option value="month">–≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞</option>
              <option value="unsure">—É—Ç–æ—á–Ω—é</option>
            </select>
          </div>

          <div className="grid gap-1">
            <label className="text-xs text-[var(--muted)]">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</label>
            <textarea
              className="min-h-[72px] rounded-xl px-3 py-2 bg-[var(--surface-2)] border border-[var(--border)] outline-none resize-y"
              value={comment} onChange={(e)=>setComment(e.target.value)} placeholder="–ö–æ—Ä–æ—Ç–∫–æ –æ –∑–∞–¥–∞—á–µ, –æ–ø—ã—Ç–µ, –±–∞–Ω–∫–∞—Ö‚Ä¶"
            />
          </div>

          <label className="flex items-center gap-2 text-sm">
            <input type="checkbox" checked={agree} onChange={(e)=>setAgree(e.target.checked)} />
            <span>–°–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö</span>
          </label>

          <div className="grid grid-cols-2 gap-2 pt-1">
            <button
              type="button"
              onClick={props.onClose}
              className="h-10 rounded-xl bg-[var(--surface-2)] border border-[var(--border)] font-semibold"
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              disabled={!agree || props.locked}
              className={`h-10 rounded-xl font-semibold border
                ${(!agree || props.locked)
                  ? 'opacity-60 cursor-not-allowed bg-[var(--surface)] border-[var(--border)]'
                  : 'bg-[var(--brand)] text-black border-[color-mix(in_oklab,var(--brand)70%,#000_30%)] active:translate-y-[1px]'}`}
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </button>
          </div>

          <p className="text-xs text-center text-[var(--muted)] pt-1">
            –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ Telegram
          </p>
        </form>
      </div>
    </div>
  );
}
