// netlify/functions/telegram.js

// –í–ê–ñ–ù–û: –≤ Netlify ‚Üí Site settings ‚Üí Environment variables
// –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å TELEGRAM_BOT_TOKEN = 8418769295:AAFsYxDl69QUEnLlJAI2_pEzylAeHY7pMmQ

const BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const WEBAPP_URL = 'https://app.cryptomars.ru/?tg=1'; // —Ç–≤–æ–π –º–∏–Ω–∏-–∞–ø–ø

// –º–∞–ª–µ–Ω—å–∫–∏–π —Ö–µ–ª–ø–µ—Ä –¥–ª—è Telegram Bot API
async function tg(method, payload) {
  if (!BOT_TOKEN) {
    console.error('TELEGRAM_BOT_TOKEN is missing');
    return;
  }
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/${method}`;
  const res = await fetch(url, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload ?? {}),
  });
  const data = await res.json().catch(() => ({}));
  if (!data.ok) {
    console.error('Telegram API error:', method, data);
  }
  return data;
}

exports.handler = async (event) => {
  // Telegram —à–ª—ë—Ç —Ç–æ–ª—å–∫–æ POST
  if (event.httpMethod !== 'POST') {
    return { statusCode: 200, body: 'OK' };
  }

  let update = {};
  try {
    update = JSON.parse(event.body || '{}');
  } catch (e) {
    console.error('Bad JSON', e);
    return { statusCode: 200, body: 'OK' };
  }

  try {
    // –õ–û–ì–ò ‚Äî —Å–º–æ—Ç—Ä–∏ –≤ Netlify ‚Üí Functions ‚Üí telegram ‚Üí Logs
    console.log('Update:', JSON.stringify(update));

    // 1) –°–æ–æ–±—â–µ–Ω–∏—è (–ª–∏—á–∫–∞ —Å –±–æ—Ç–æ–º)
    if (update.message) {
      const chatId = update.message.chat.id;
      const text = update.message.text || '';

      // /start ‚Üí –ø—Ä–∏—Å—ã–ª–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ¬ª
      if (text.startsWith('/start')) {
        await tg('sendMessage', {
          chat_id: chatId,
          text: '–û—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ üëá',
          // –í–∞—Ä–∏–∞–Ω—Ç –ê: –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞ (–ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º)
          reply_markup: {
            inline_keyboard: [[
              {
                text: '–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                web_app: { url: WEBAPP_URL },
              },
            ]],
          },
        });
      } else {
        // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ‚Äî –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await tg('sendMessage', {
          chat_id: chatId,
          text: '–ù–∞–ø–∏—à–∏ /start ‚Äî –ø—Ä–∏—à–ª—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App',
        });
      }
    }

    // 2) CallbackQuery (–Ω–∞ –±—É–¥—É—â–µ–µ)
    if (update.callback_query) {
      const cq = update.callback_query;
      await tg('answerCallbackQuery', { callback_query_id: cq.id });
    }

    // 3) –ò–≥–Ω–æ—Ä –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ
  } catch (e) {
    console.error('Handler error:', e);
  }

  // –í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–µ–º 200, —á—Ç–æ–±—ã Telegram –Ω–µ —Ä–µ—Ç—Ä–∞–∏–ª
  return { statusCode: 200, body: 'OK' };
};
